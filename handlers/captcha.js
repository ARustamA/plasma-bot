const { Markup } = require('telegraf');

async function handleTestCaptchaCommand(ctx) {
  ctx.session.state = 'testing_captcha';

  await ctx.reply(
    'üß™ *–¢–µ—Å—Ç –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏*\n\n' +
    'üìù –í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏.\n\n' +
    'üí° –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –±–æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –≤–≤–æ–¥.',
    {
      parse_mode: 'Markdown',
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ—Å—Ç', 'cancel_captcha_test')]
      ])
    }
  );
}

async function handleTestCaptchaInput(ctx, text) {
  const captchaText = text.trim();

  if (captchaText.length < 1) {
    await ctx.reply('‚ùå –ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç. –í–≤–µ–¥–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥–ª—è —Ç–µ—Å—Ç–∞:');
    return;
  }

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Å—Ç–∞
  ctx.session.state = 'ready';

  await ctx.reply(
    `‚úÖ *–¢–µ—Å—Ç –∫–∞–ø—á–∏ —É—Å–ø–µ—à–µ–Ω!*\n\n` +
    `üìù –í—ã –≤–≤–µ–ª–∏: "${captchaText}"\n` +
    `üìè –î–ª–∏–Ω–∞: ${captchaText.length} —Å–∏–º–≤–æ–ª–æ–≤\n\n` +
    `üéâ –°–∏—Å—Ç–µ–º–∞ –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!`,
    {
      parse_mode: 'Markdown',
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
      ])
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Ç–µ—Å—Ç–∞ –∫–∞–ø—á–∏
async function handleCaptchaTestCancel(ctx) {
  ctx.session.state = 'ready';

  await ctx.editMessageText(
    '‚ùå *–¢–µ—Å—Ç –∫–∞–ø—á–∏ –æ—Ç–º–µ–Ω–µ–Ω*\n\n' +
    'üí° –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥–æ–π /testcaptcha',
    {
      parse_mode: 'Markdown',
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback('üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
      ])
    }
  );
}

module.exports = {
  handleTestCaptchaCommand,
  handleTestCaptchaInput,
  handleCaptchaTestCancel
};
