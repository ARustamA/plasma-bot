const { Markup } = require('telegraf');
const fs = require('fs');

async function requestManualCaptcha(ctx, captchaImagePath) {
  try {
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ø—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞...');

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏
    ctx.session.state = 'waiting_captcha_input';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–ø—á–∏
    await ctx.replyWithPhoto(
      { source: captchaImagePath },
      {
        caption: 'üîê *–í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è*\n\n' +
          'üí° –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç–µ.\n' +
          'üìù –û–±—ã—á–Ω–æ —ç—Ç–æ 4-6 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã).',
        parse_mode: 'Markdown',
        reply_markup: Markup.inlineKeyboard([
          [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å', 'cancel_captcha')]
        ])
      }
    );

    console.log('–ö–∞–ø—á–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞–ø—á–∏:', error);

    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    if (fs.existsSync(captchaImagePath)) {
      try {
        fs.unlinkSync(captchaImagePath);
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–∞–ø—á–∏:', e);
      }
    }

    await ctx.reply(
      '‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞–ø—á–∏*\n\n' +
      'üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è.',
      {
        parse_mode: 'Markdown',
        reply_markup: Markup.inlineKeyboard([
          [Markup.button.callback('üîô –ö –≤—ã–±–æ—Ä—É –¥–∞—Ç', 'back_to_dates')]
        ])
      }
    );
  }
}


module.exports = {
  requestManualCaptcha
};
